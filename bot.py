import discord
from discord.ext import commands

import sqlite3
from random import choice
from discord import Color
from time import sleep

import os

from webdriver_manager.chrome import ChromeDriverManager
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
from urllib.parse import unquote

opts = Options()
opts.add_argument('--disable-dev-shm-usage')
opts.add_argument('--no-sandbox')
opts.headless = True

driver = webdriver.Chrome(executable_path=ChromeDriverManager().install(), chrome_options=opts)

intents = discord.Intents.default()
intents.members = True

client = commands.Bot(command_prefix='_', intents=intents)

colors = {
    '–ü–∏—Ä–æ': discord.Color.red(),
    '–ì–∏–¥—Ä–æ': discord.Color.blue(),
    '–≠–ª–µ–∫—Ç—Ä–æ': discord.Color.dark_purple(),
    '–ö—Ä–∏–æ': discord.Color.teal(),
    '–î–µ–Ω–¥—Ä–æ': discord.Color.dark_green(),
    '–ê–Ω–µ–º–æ': discord.Color.green(),
    '–ì–µ–æ': discord.Color.dark_gold()
}

db1 = sqlite3.connect('kto.db', check_same_thread=False)
sql1 = db1.cursor()

db2 = sqlite3.connect('krutie.db', check_same_thread=False)
sql2 = db2.cursor()

db3 = sqlite3.connect('lvl.db', check_same_thread=False)
sql3 = db3.cursor()

sql3.execute("""CREATE TABLE IF NOT EXISTS lvl(
    level INT,
    exp INT
)""")
db3.commit()

sql1.execute("""CREATE TABLE IF NOT EXISTS kto(
    names TEXT,
    id INT,
    weapon TEXT,
    carry TEXT,
    support TEXT,
    reactor TEXT,
    description TEXT,
    truename TEXT,
    element TEXT,
    image TEXT
)""")
db1.commit()

sql2.execute("""CREATE TABLE IF NOT EXISTS krutie(
    id INT,
    name TEXT
)""")
db2.commit()


@client.event
async def on_ready():
    print("–í–ù–ò–ú–ê–ù–ò–ï! –í–ê–® –ö–û–ú–ü–¨–Æ–¢–ï–† –ë–´–õ –ó–ê–†–ê–ñ–ï–ù –ú–ê–ô–ù–ï–†–û–ú!")


@client.command()
async def –ø–æ–ø–∏—Ç(ctx, arg1, arg2):
    if arg1.isnumeric() and arg2.isnumeric():
        arg1 = int(arg1)  # –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä—è–¥
        arg2 = int(arg2)  # –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π
        pupirki = []
        if 0 < arg1 < 14 and 0 < arg2 < 14:
            for i in range(arg1):
                pupirki.append('||(-)||')
            pupirki.append('\n')
            msg = ''.join(pupirki) * arg2
            await ctx.send(msg)
    else:
        await ctx.send('–ù—É 2 —á–∏—Å–ª–∞ –≤–≤–µ–¥–∏ –∫–∞–º–æ–Ω. _–ø–æ–ø–∏—Ç 1-13 1-13')


@client.command()
async def –≤–∏–∫–∏(ctx, *args):
    try:
        arg1 = '¬†'.join(args)
        driver.get(
            'https://genshin-impact.fandom.com/ru/wiki/–°–ª—É–∂–µ–±–Ω–∞—è:–ü–æ–∏—Å–∫?query=&scope=internal&contentType=&ns%5B0%5D=0#')
        sleep(1)
        search = driver.find_element_by_xpath('//input[@class="unified-search__input__query"]')
        search.send_keys(arg1)
        search.send_keys(Keys.ENTER)
        result = driver.find_elements_by_class_name('unified-search__result__title')[0].get_attribute('href')
        await ctx.send("<" + unquote(result) + ">")
    except:
        await ctx.send('–æ—à–∏–±–æ—á–∫–∞...')


@client.command()
async def —Ä–æ–∑—ã–≥—Ä—ã—à(ctx, *args):
    arg = " ".join(args)
    mems = []
    channel = ctx.message.author.voice.channel
    print(channel)
    members = channel.members
    print(members)
    for member in members:
        mems.append(member)
    winner = choice(mems).mention
    emb = discord.Embed(title='**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≤—ã–±—Ä–∞–Ω!**',
                        description=f'**–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º ** {winner}! –í—ã —Å—Ç–∞–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞.\n\nüéÅ **–ü—Ä–∏–∑:\n**{arg}')
    await ctx.send(embed=emb)


# –¥–∞–ª—å—à–µ –≥–∞–π–¥—ã –Ω–∞ –ø–µ—Ä—Å–æ–≤, –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ —Å–µ–±—è –≤ –±–¥ —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ (_–∫—Ä—É—Ç–æ–π @—á–µ–ª–æ–≤–µ–∫)

@client.command()
async def –∫—Ä—É—Ç–æ–π(ctx, arg1, arg2):
    ids = ['–ê–ô–î–ò –°–í–û–ô –°–Æ–î–ê –í–í–ï–î–ò –°–û–í–ï–°–¢–¨ –ò–ú–ï–ô –ò –î–†–£–ì–ê –°–£–ù–¨ –ï–°–õ–ò –ï–°–¢–¨']
    if arg1.isnumeric():
        arg1 = int(arg1)
        if ctx.message.author.id in ids:
            sql2.execute(f"INSERT INTO krutie VALUES ({arg1}, '{arg2}')")
            db2.commit()
            await ctx.send(f'{arg2} —Ç–µ–ø–µ—Ä—å —Ä–µ–¥–∞–∫—Ç–æ—Ä! (–∞–π–¥–∏: {arg1})')
    else:
        await ctx.send("–ß–∏—Å–ª–æ –≤–≤–µ–¥–∏")


@client.command()
async def –æ–ø–∏—Å–∞–Ω–∏–µ(ctx, *args):
    if args[0].isnumeric:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(args[0])
            arg2 = ' '.join(args[1:])
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid = [i[0] for i in charid]
            if arg1 in charid:
                sql1.execute(f'UPDATE kto SET description = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    else:
        await ctx.send("–ß–∏—Å–ª–æ –≤–≤–µ–¥–∏")


@client.command()
async def –∫–∞—Ä—Ç–∏–Ω–∫–∞(ctx, arg1):
    if arg1.isnumeric:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(arg1)
            arg2 = ctx.message.attachments[0].url
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid1 = [i[0] for i in charid]
            if arg1 in charid1:
                sql1.execute(f'UPDATE kto SET image = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    else:
        await ctx.send("–ß–∏—Å–ª–æ –≤–≤–µ–¥–∏")


@client.command()
async def –æ—Ä—É–∂–∏–µ(ctx, arg1, arg2):
    if arg1.isnumeric:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(arg1)
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid = [i[0] for i in charid]
            if arg1 in charid:
                sql1.execute(f'UPDATE kto SET weapon = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–û—Ä—É–∂–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    else:
        await ctx.send("–ß–∏—Å–ª–æ –≤–≤–µ–¥–∏")


@client.command()
async def —É–¥–∞–ª–∏—Ç—å(ctx, arg1):
    if arg1.isnumeric():
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(arg1)
            sql1.execute(f'DELETE FROM kto WHERE id = {arg1}')
            db1.commit()
            rows = sql1.execute('SELECT COUNT(*) FROM kto').fetchone()[0]
            for i in range(rows):
                i += 1
                try:
                    sql1.execute(f'UPDATE kto SET id = {arg1 + i - 1} WHERE id = {arg1 + i}')
                    db1.commit()
                except:
                    break

            await ctx.send("–£–¥–∞–ª–∏–ª.")

    else:
        await ctx.send("–ß–∏—Å–ª–æ –≤–≤–µ–¥–∏")


@client.command()
async def –æ—Ü–µ–Ω–∫–∞(ctx, arg1, arg2, arg3, arg4):
    try:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(arg1)
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid1 = [i[0] for i in charid]
            if arg1 in charid1:
                sql1.execute(f'UPDATE kto SET carry = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                sql1.execute(f'UPDATE kto SET support = "{arg3}" WHERE id = {arg1}')
                db1.commit()
                sql1.execute(f'UPDATE kto SET reactor = "{arg4}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    except Exception as e:
        await ctx.send("–û—à–∏–±–æ—á–∫–∞.")
        print(e)


@client.command()
async def –∫—Ç–æ(ctx, arg1):
    arg1 = arg1.lower()
    nms = sql1.execute("SELECT names FROM kto").fetchall()
    nms1 = [i[0] for i in nms]
    for i, elem in enumerate(nms):
        elem = elem[0]
        if arg1 in elem:
            nm = nms1[i]

    tn = sql1.execute(f'SELECT truename FROM kto WHERE names = "{nm}"').fetchone()[0]
    el = sql1.execute(f'SELECT element FROM kto WHERE names = "{nm}"').fetchone()[0]
    oj = sql1.execute(f'SELECT weapon FROM kto WHERE names = "{nm}"').fetchone()[0]
    cr = sql1.execute(f'SELECT carry FROM kto WHERE names = "{nm}"').fetchone()[0]
    sp = sql1.execute(f'SELECT support FROM kto WHERE names = "{nm}"').fetchone()[0]
    rc = sql1.execute(f'SELECT reactor FROM kto WHERE names = "{nm}"').fetchone()[0]
    ds = sql1.execute(f'SELECT description FROM kto WHERE names = "{nm}"').fetchone()[0]
    img = sql1.execute(f'SELECT image FROM kto WHERE names = "{nm}"').fetchone()[0]

    try:
        col = colors[el]
    except:
        col = Color.green()

    e = discord.Embed(title=f'**{tn}**',
                      description=f'–°—Ç–∏—Ö–∏—è: `{el}`\n–û—Ä—É–∂–∏–µ: `{oj}`\n\n–ö–µ—Ä—Ä–∏: `{cr}`\n–°–∞–ø–ø–æ—Ä—Ç: `{sp}`\n–†–µ–∞–∫—Ç–æ—Ä: `{rc}`\n\n{ds}',
                      color=col)
    e.set_thumbnail(url=img)
    await ctx.send(embed=e)


@client.command()
async def –Ω–æ—Ä–º–∏–º—è(ctx, *args):
    try:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(args[0])
            arg2 = ' '.join(args[1:])
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid1 = [i[0] for i in charid]
            if arg1 in charid1:
                sql1.execute(f'UPDATE kto SET truename = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    except Exception as e:
        await ctx.send("–û—à–∏–±–æ—á–∫–∞.")
        print(e)


@client.command()
async def —ç–ª–µ–º–µ–Ω—Ç(ctx, *args):
    try:
        ids = sql2.execute('SELECT id FROM krutie').fetchall()
        ids = [i[0] for i in ids]
        if ctx.message.author.id in ids:
            arg1 = int(args[0])
            arg2 = ' '.join(args[1:])
            charid = sql1.execute('SELECT id FROM kto').fetchall()
            charid1 = [i[0] for i in charid]
            if arg1 in charid1:
                sql1.execute(f'UPDATE kto SET element = "{arg2}" WHERE id = {arg1}')
                db1.commit()
                await ctx.send("–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.")
            else:
                await ctx.send("–û—à–∏–±–æ—á–∫–∞ —Å –∞–π–¥–∏.")
    except Exception as e:
        await ctx.send("–û—à–∏–±–æ—á–∫–∞.")
        print(e)


@client.command()
async def –∞–π–¥–∏(ctx):
    try:
        ids = sql1.execute('SELECT id FROM kto').fetchall()
        ids = [i[0] for i in ids]
        nms = sql1.execute('SELECT names FROM kto').fetchall()
        nms = [i[0] for i in nms]
        tnms = sql1.execute('SELECT truename FROM kto').fetchall()
        tnms = [i[0] for i in tnms]
        s = ""
        for i in range(len(ids)):
            s = s + str(tnms[i] + " - " + str(nms[i]) + " - **" + str(ids[i]) + "**\n")
        e = discord.Embed(description=s, title="–ê–π–¥–∏—à–Ω–∏–∫–∏ –∏ –∏–º–µ–Ω–∞")
        await ctx.send(embed=e)
    except Exception as e:
        await ctx.send("–û—à–∏–±–æ—á–∫–∞.")
        print(e)


@client.command()
async def –∏–º–µ–Ω–∞(ctx, arg1):
    try:
        x = sql1.execute('SELECT names FROM kto').fetchall()
        x = [i[0] for i in x]
        print(x)
        s = ''
        for i, elem in enumerate(x):
            print(elem)
            if arg1 in elem:
                s = x[i]
                break
        if s != '':
            s = ', '.join(s.split())
            await ctx.send("`" + s + "`")
        else:
            await ctx.send('–ß–µ—Ç –Ω–µ —Ç–∞–∫.')
    except Exception as e:
        print(e)
        await ctx.send("–æ—à–∏–±–∫–∞...")


@client.command()
async def –±–µ–∫–∞–ø(ctx):
    ids = sql2.execute('SELECT id FROM krutie').fetchall()
    ids = [i[0] for i in ids]
    if ctx.message.author.id in ids:
        kto = os.path.abspath('kto.db')
        krutie = os.path.abspath('krutie.db')
        await ctx.send(file=discord.File(kto))
        await ctx.send(file=discord.File(krutie))


@client.command()
async def –¥–æ–±–∞–≤–∏—Ç—å(ctx, *args):
    ids = sql2.execute('SELECT id FROM krutie').fetchall()
    ids = [i[0] for i in ids]
    if ctx.message.author.id in ids:
        arg = ' '.join(args).lower()
        x = sql1.execute('SELECT COUNT(*) FROM kto').fetchone()[0]
        pic = "https://cdn.discordapp.com/attachments/517055018126278717/858594873178193930/1617445555_32bb90e8976aab5298d5da10fe66f21d.png"
        sql1.execute(
            f'INSERT INTO kto VALUES ("{arg}", {x + 1}, "–û—Ä—É–∂–∏–µ –∫–∞–∫–æ–µ-—Ç–æ", "0", "0", "0", "–û–ø–∏—Å–∞–Ω–∏–µ", "–ù–æ—Ä–º –∏–º—è", "–≠–ª–µ–º–µ–Ω—Ç", {pic})')
        db1.commit()
        await ctx.send(
            f'–ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–±–∞–≤–ª–µ–Ω. –ï–≥–æ –∏–º–µ–Ω–∞: {arg}. –î–∞–ª–µ–µ —Å—Ç–æ–∏—Ç —É–∫–∞–∑–∞—Ç—å –µ–≥–æ `_–æ—Ä—É–∂–∏–µ, _–∫–∞—Ä—Ç–∏–Ω–∫–∞, _–æ—Ü–µ–Ω–∫–∞, _–æ–ø–∏—Å–∞–Ω–∏–µ, _–Ω–æ—Ä–º–∏–º—è, _—ç–ª–µ–º–µ–Ω—Ç`. –ê–π–¥–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ - {x + 1}.')


if __name__ == '__main__':
    token = '–¢–û–ö–ï–ù –°–í–û–ô –í–í–ï–î–ò –ù–£ –ù–ï –ú–û–ô –ñ–ï –Ø –¢–ï–ë–ï –î–ê–ú –ù–£ –°–û–í–ï–°–¢–¨ –ò–ú–ï–ô'
    client.run(token)
